---
swagger: '2.0'
info:
  title: Docker commander REST API
  description: Do docker operations with an API REST interface
  version: "0.3.0"
# the domain of the service
host: 192.168.7.2

schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /dockercommander
produces:
  - application/json
paths:
  /build:
    post:
      summary: Start a building process.
      description: |
        Start a building process for several images described as _Dockerfile_ + _puppet manifest_.
      responses:
        200:
          description: OK
          schema:
              $ref: "#/definitions/OperationToken"
        400:
          description: Bad request. Problem with provided files.
    get:
      summary: Get list with building processes.
      description: |
        Retrieve a list with the building processes that are running, cancelled, stopped or finished.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ListOfBuilds'

  /build/{operationToken}:
    get:
      summary: Get information about a building process.
      description: |
        Retrieve information about the status of building process.
      parameters:
        - name: operationToken
          in: path
          type: string
          description: Token that identifies the building process.
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BuildStatus'
        404:
          description: building process not found.
    delete:
      summary: Remove a building process and the related data.
      description: |
        Remove a building process and the related data.
      parameters:
        - name: operationToken
          in: path
          type: string
          description: Token that identifies the building process.
          required: true
      responses:
        200:
          description: OK
        404:
          description: building process not found.

  /cluster:
    post:
      summary: Create a new swarm cluster
      description: |
        Instance swarm master and join swarm nodes in VMs
      parameters:
        - in: body
          name: body
          description: List of user object
          required: false
          schema:
            type: array
            items:
              $ref: "#/definitions/VmsDescription"
      responses:
        200:
          description: OK

  /cluster/{operationToken}:
    get:
      summary: Get information about a docker swarm cluster.
      description: |
        Retrieve information about the status of a docker swarm cluster.
      parameters:
        - name: operationToken
          in: path
          type: string
          description: Token that identifies the docker swarm cluster.
          required: true
      responses:
        200:
          description: OK
        404:
          description: cluster not found.
    delete:
      summary: Destroy a cluster.
      description: |
        Destroy a cluster and the related data.
      parameters:
        - name: operationToken
          in: path
          type: string
          description: Token that identifies the cluster.
          required: true
      responses:
        200:
          description: OK
        404:
          description: building process not found.

  /composer:
    post:
      summary: Create a container composition
      description: |
        Instance a container based services deploying and linking the containers defined in the docker-compose.yml
      parameters:
        - in: body
          name: body
          description: List of user object
          required: false
          schema:
            type: array
            items:
              $ref: "#/definitions/VmsDescription"
      responses:
        200:
          description: OK

  /composer/{operationToken}:
    get:
      summary: Get information about a docker container composition.
      description: |
        Retrieve information about the status of a docker composition.
      parameters:
        - name: operationToken
          in: path
          type: string
          description: Token that identifies the docker composition.
          required: true
      responses:
        200:
          description: OK
        404:
          description: composition not found.
    delete:
      summary: Destroy the container composition
      description: |
        Destroy the container composition and the related data.
      parameters:
        - name: operationToken
          in: path
          type: string
          description: Token that identifies the building process.
          required: true
      responses:
        200:
          description: OK
        404:
          description: composition not found.


definitions:

  OperationToken:
    properties:
      token:
        type: string

  BuildStatus:
    properties:
      token:
        type: string
      status:
        $ref: "#/definitions/Status"
      detail:
        type: string

  Status:
    properties:
      id:
        type: integer
      description:
        type: string

  ListOfBuilds:
    properties:
      id:
        type: integer
      token:
        type: string

  VmsDescription:
    properties:
      items:
        properties:
          id:
            type: integer
          hostname:
            type: string
          authType:
            $ref: "#/definitions/AuthTypes"
  AuthTypes:
    properties:
